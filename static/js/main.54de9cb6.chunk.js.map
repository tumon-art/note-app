{"version":3,"sources":["SimpleNoteApp/CSS/AddNote.module.css","SimpleNoteApp/CSS/note.module.css","SimpleNoteApp/CSS/Search.module.css","SimpleNoteApp/CSS/Header.module.css","SimpleNoteApp/AddNote.js","SimpleNoteApp/Note.js","SimpleNoteApp/NotesList.js","SimpleNoteApp/Search.js","SimpleNoteApp/Header.js","SimpleNoteApp/NoteMain.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AddNote","addNote","React","useContext","UC","useState","noteText","setnoteText","className","css","textarea","rows","cols","placeholder","onChange","e","target","value","length","alert","footer","small","button","onClick","trim","Note","deleteNote","note","span","text","noteFooter","date","deleteIcon","id","size","NotesList","notes","map","Search","setsearchText","search","mdsearch","toLowerCase","type","Header","darkTheme","header","createContext","NoteMain","nanoid","setnotes","searchText","isDark","setisDark","useEffect","savedNote","JSON","parse","localStorage","getItem","setItem","stringify","Provider","Date","newNote","toLocaleDateString","index","findIndex","newNotes","splice","p","filter","includes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54de9cb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNote\":\"AddNote_addNote__2ebhl\",\"footer\":\"AddNote_footer__2o4zi\",\"small\":\"AddNote_small__1sTT2\",\"button\":\"AddNote_button__19jWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"note_note__1Z4ze\",\"span\":\"note_span__3sW2y\",\"noteFooter\":\"note_noteFooter__1iGYE\",\"deleteIcon\":\"note_deleteIcon__MEX82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__1a8YF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__19B5i\",\"button\":\"Header_button__M4JWp\"};","import React from 'react'\nimport { useState } from 'react'\nimport css from './CSS/AddNote.module.css'\nimport { UC } from './NoteMain'\n\n\nexport const AddNote = () => {\n\n    const {addNote} = React.useContext(UC) // Use Context\n\n    const [noteText, setnoteText] = useState('') // State\n\n    const characterLimit = 200 ;\n\n    const handleChange = (e) => {\n        if (characterLimit - e.target.value.length >= 0 ) {\n            setnoteText(e.target.value)\n        } else {\n            alert('Character Limit')\n        }\n    }\n    \n    // Save Button in ADD Note\n    const saveBtn = () => {\n        // trim() delete the whitespace\n        if (noteText.trim().length > 0 ) {\n            addNote(noteText)\n        }\n        setnoteText('')\n    }\n    return (\n        <div className={css.addNote}>\n            <textarea\n            className={css.textarea}\n            rows='8'\n            cols='10'\n            placeholder='Type to add new Note!'\n            onChange={handleChange}\n            value={noteText}>\n            </textarea>\n\n            <div className={css.footer}> \n                <small className={css.small}> {characterLimit - noteText.length} Remaining  </small>\n                <button className={css.button}\n                onClick={saveBtn}> Save</button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport css from './CSS/note.module.css'\nimport { UC } from './NoteMain'\nimport { MdDeleteForever } from 'react-icons/md'\nexport const Note = ({e}) => {\n\n    const {deleteNote} = React.useContext(UC)\n    return (\n        <div className={css.note}>\n            <span className={css.span}> {e.text} </span>\n            <div className={css.noteFooter}>\n                <small> {e.date} </small>\n                <MdDeleteForever className={css.deleteIcon}\n                onClick={()=>deleteNote(e.id)}\n                size='1.3em'\n                />\n            </div>\n        </div>\n    )\n}\n","import { AddNote } from \"./AddNote\"\nimport { Note } from \"./Note\"\n\nexport const NotesList = ({notes}) => {\n    return (\n        <div className='notesList'>\n            {notes.map((e)=> {\n              return  <Note key={e.id} e={e} />\n            })}\n            <AddNote />\n        </div>\n    )\n}\n","import React from 'react'\nimport css from './CSS/Search.module.css'\nimport { MdSearch } from 'react-icons/md'\n\nexport const Search = ({setsearchText}) => {\n    return (\n        <div className={css.search}>\n            <MdSearch className={css.mdsearch} size='1.3em' />\n            <input onChange={(e)=> setsearchText(e.target.value.toLowerCase())}\n            type='text' placeholder='type to search...' />\n        </div>\n    )\n}\n","import React from 'react'\nimport css from './CSS/Header.module.css'\n\nexport const Header = ({darkTheme}) => {\n    return (\n        <div className={css.header}>\n            <h1> Notes</h1>\n            <button onClick={darkTheme} className={css.button}> Toggle Theme </button>\n        </div>\n    )\n}\n","import React, { useEffect } from \"react\"\nimport { NotesList } from \"./NotesList\"\nimport './CSS/Main.css'\nimport { useState } from \"react\"\nimport { nanoid } from \"nanoid\"\nimport { Search } from \"./Search\"\nimport { Header } from \"./Header\"\n\nexport const UC = React.createContext() // Use Context\n\nexport const NoteMain = () => {\n    const [notes, setnotes] = useState([\n        {\n            id: nanoid(),\n            text:'This is my Text',\n            date: \"19/3/21\",\n        },\n        {\n            id: nanoid(),\n            text:'This is second Text',\n            date: \"14/7/21\",\n        },\n        {\n            id: nanoid(),\n            text:'This is third Text',\n            date: \"26/4/21\",\n        },\n        {\n            id: nanoid(),\n            text:'This is fourth Text',\n            date: \"22/5/21\",\n        }\n    ])\n    \n    // Search Text State\n    const [searchText, setsearchText] = useState('')\n\n    // Dark Mode \n    const [isDark, setisDark] = useState(false)\n\n    // Add Note\n    const addNote = (text) => {\n        const date = new Date()\n        \n        const newNote = {\n            id:nanoid(),\n            text: text,\n            date: date.toLocaleDateString()\n        }\n        setnotes([...notes,newNote])\n    }\n\n    // Delete a Note \n    const deleteNote = (id) => {\n        const index = notes.findIndex((e)=> e.id === id)\n        const newNotes = [...notes]\n        newNotes.splice(index,1)\n        setnotes(newNotes)\n    }\n\n    // Dark Mode Toggle \n    const darkTheme = () => {\n        setisDark(p => !p )\n    }\n\n    // Save To the local Host \n\n    useEffect(()=>{\n        const savedNote = JSON.parse(localStorage.getItem('note-app'))\n\n        if (savedNote) {\n            setnotes(savedNote)\n        }\n    },[])\n\n    useEffect(()=> {\n        localStorage.setItem('note-app',JSON.stringify(notes))\n    },[notes])\n\n    return (\n        <div className={`${isDark && 'dark'}`}> \n            <div className='container'>\n            \n            <UC.Provider\n            value={{addNote:addNote,deleteNote:deleteNote}}\n            >\n            <Header darkTheme={darkTheme} />\n            <Search setsearchText={setsearchText} />\n            <NotesList \n            notes={notes.filter((e)=> e.text.includes(searchText) ) } />\n            </UC.Provider>\n    \n            </div>\n        </div>\n    )\n}\n","import { NoteMain } from \"./SimpleNoteApp/NoteMain\";\n\nfunction App() {\n  return (\n    <>\n      <NoteMain />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}